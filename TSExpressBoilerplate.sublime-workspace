{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"users",
				"usersSchema"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/Prog/TSExpressBoilerPlate/package.json",
			"settings":
			{
				"buffer_size": 423,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/Prog/TSExpressBoilerPlate/Gruntfile.js",
			"settings":
			{
				"buffer_size": 408,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Prog/TSExpressBoilerPlate/TSExpressBoilerplate.sublime-project",
			"settings":
			{
				"buffer_size": 196,
				"line_ending": "Unix"
			}
		},
		{
			"file": "routes/routes.ts",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/// <reference path=\"typings/express/express.d.ts\" />\n/// <reference path=\"typings/node/node.d.ts\" />\n\nimport express = require('express');\nimport path = require('path');\nimport favicon = require('static-favicon');\nimport logger = require('morgan');\nimport cookieParser = require('cookie-parser');\nimport bodyParser = require('body-parser');\n\nimport routes = require('./routes/index');\nimport users = require('./routes/users');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hjs');\n\napp.use(connect.favicon());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded());\napp.use(cookieParser());\napp.use(require('less-middleware')({ src: path.join(__dirname, 'public') }));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/users', users);\n\n/// catch 404 and forwarding to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n/// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use(function(err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\n\nmodule.exports = app;\n",
			"file": "app2.ts",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 1591,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Prog/TSExpressBoilerPlate/typings/express/express.d.ts",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Prog/TSExpressBoilerplate/TSExpressBoilerplate.sublime-project",
		"/D/Prog/TSExpressBoilerPlate/TSExpressBoilerplate.sublime-project",
		"/D/Prog/meanApp/packages/articles/server/routes/articles.js",
		"/D/Prog/meanApp/node_modules/meanio/lib/templates/server/routes.js",
		"/D/Prog/ExpressTS/app.js",
		"/D/Prog/ExpressTS/models/users.js",
		"/D/Prog/ExpressTS/views/layout.jade",
		"/D/Prog/ExpressTS/views/users.jade",
		"/D/Prog/ExpressTS/routes/index.js",
		"/D/Prog/ExpressTS/bin/www",
		"/D/Prog/ExpressTS/package.json",
		"/D/Prog/ExpressTS/test/Test.Test1.js",
		"/D/Prog/ExpressTS/test/Test.Test2.ts",
		"/D/Prog/ExpressTS/test.ts"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"D:\\Prog\\meanApp\\server",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"apa",
			"requiresAdmin",
			"requiresLogin",
			"3000"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/Prog/TSExpressBoilerPlate/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 423,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/Prog/TSExpressBoilerPlate/Gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 408,
						"regions":
						{
						},
						"selection":
						[
							[
								194,
								194
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/Prog/TSExpressBoilerPlate/TSExpressBoilerplate.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 196,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "routes/routes.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app2.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1591,
						"regions":
						{
						},
						"selection":
						[
							[
								604,
								604
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/D/Prog/TSExpressBoilerPlate/typings/express/express.d.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"extensions":
							[
								"ts"
							],
							"syntax": "Packages/T3S/Typescript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "TSExpressBoilerplate.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 234.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
